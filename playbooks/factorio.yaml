# Builds a factorio server
# 
# Work in progress. Testing in gcloud with a 10gb boot drive (non-ssd)
# - n1-standard: Testing, seems a bit overpowered at the start, but very smooth and 0.033$/hr at the time of
#   writing this so costs pennies per month to play
#
# TODO: Still issues with starting factorio service automatically at boot
# TODO: Scaledown
#
# Author: Chuck Findlay <chuck@findlayis.me>
# License: LGPL v3.0
- hosts: factorio
  user: root

  tasks:
    - name: Update apt cache
      apt: update_cache=yes cache_valid_time=86400

    - name: Install depends
      apt:
        name:
          - screen
          - wget
        state: present
        autoclean: yes
     
    #           #
    # Scripting #
    #           #
    - name: Upload /usr/local/bin/factoriod.sh
      action: copy src=configs/usr/local/bin/factoriod.sh
        dest=/usr/local/bin/factoriod.sh
        owner=0 group=0 mode=0755

      notify:
        - reload systemd

    #                          #
    # Service account creation #
    #                          #
    - name: Create factorio group
      group:
        name: factorio
        state: present
        gid: '5000'

    - name: Create factorio account
      user:
        name: factorio
        group: factorio
        state: present
        home: /factorio
        password_lock: yes
        create_home: no
        shell: /bin/bash
        uid: '5000'

    - name: Create home directory if needed
      file:
        path: /factorio
        state: directory
        owner: factorio
        group: factorio
        mode: '0775'

    #                #
    # ufw (firewall) #
    #                #

    - name: Allow port 34197 (UDP) in
      ufw:
          rule: allow
          port: '34197'
          proto: udp

    #         #
    # Systemd #
    #         #

    - name: Copy /etc/systemd/system/factorio.service
      template: src=configs/etc/systemd/system/factorio.service.j2
        dest=/etc/systemd/system/factorio.service
        backup=no
        owner=0 group=0 mode=0644
      notify:
        - reload systemd
        - enable factorio
        - restart factorio

      notify:
        - reload systemd

    #          #
    # Download #
    #          #

    - name: Check if server .tar.xz file exists exists
      stat:
        path: /factorio/1.0.0.tar.xz
      register: zip_result

    - name: Downloading server .tar.xz file if needed
      command: /usr/bin/wget https://factorio.com/get-download/1.0.0/headless/linux64 -O /factorio/1.0.0.tar.xz
      when: zip_result.stat.exists == False 

    - name: Create version directory if needed
      file:
        path: /factorio/1.0.0
        state: directory
        owner: factorio
        group: factorio
        mode: '0775'

    - name: Extract server .tar.xz file if needed
      unarchive:
        src: /factorio/1.0.0.tar.xz
        dest: /factorio/1.0.0
        owner: factorio
        group: factorio
        remote_src: yes
      when: zip_result.stat.exists == False 
      notify:
        - enable factorio
        - restart factorio

    #               #
    # Configuration #
    #               #

    - name: Create config directory
      file:
        path: /factorio/config
        state: directory
        owner: factorio
        group: factorio
        mode: '0775'

    - name: Upload /factorio/config/server-settings.json
      action: copy src=configs/factorio/config/server-settings.json
        dest=/factorio/config/server-settings.json
        owner=0 group=0 mode=0755

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: enable factorio
      systemd:
        name: factorio
        enabled: yes
        masked: no

    - name: restart factorio
      service: name=factorio state=restarted